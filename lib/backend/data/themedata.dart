import 'package:flutter/material.dart';

List<ThemeData> getThemes() {
  return [
    ThemeData(
      colorScheme: const ColorScheme(
        brightness: Brightness.light,
        primary: Colors.blue,
        onPrimary: Colors.red,
        secondary: Colors.green,
        onSecondary: Colors.black,
        error: Colors.red,
        onError: Colors.black,
        background: Color.fromRGBO(242, 242, 242, 1),
        onBackground: Colors.white,
        surface: Colors.black,
        onSurface: Colors.black,
      ),
    ),
    ThemeData(
      colorScheme: const ColorScheme(
        brightness: Brightness.dark,
        primary: Colors.blue,
        onPrimary: Colors.red,
        secondary: Colors.green,
        onSecondary: Colors.black,
        error: Colors.red,
        onError: Colors.black,
        background: Color.fromRGBO(10, 10, 10, 1),
        onBackground: Colors.white,
        surface: Colors.black,
        onSurface: Colors.black,
      ),
    ),
    ThemeData(
      colorScheme: const ColorScheme(
        brightness: Brightness.dark,
        primary: Colors.blue,
        onPrimary: Colors.red,
        secondary: Colors.green,
        onSecondary: Colors.black,
        error: Colors.red,
        onError: Colors.black,
        background: Color.fromRGBO(30, 50, 50, 1),
        onBackground: Colors.white,
        surface: Colors.black,
        onSurface: Colors.black,
      ),
    ),
    ThemeData(
      colorScheme: const ColorScheme(
        brightness: Brightness.dark,
        primary: Colors.blue,
        onPrimary: Colors.red,
        secondary: Colors.green,
        onSecondary: Colors.black,
        error: Colors.red,
        onError: Colors.black,
        background: Color.fromRGBO(40, 20, 25, 1),
        onBackground: Colors.white,
        surface: Colors.black,
        onSurface: Colors.black,
      ),
    ),
    ThemeData(
      colorScheme: const ColorScheme(
        brightness: Brightness.dark,
        primary: Colors.blue,
        onPrimary: Colors.red,
        secondary: Colors.green,
        onSecondary: Colors.black,
        error: Colors.red,
        onError: Colors.black,
        background:  Color.fromRGBO(33, 33, 33, 1),
        onBackground: Colors.white,
        surface: Colors.black,
        onSurface: Colors.black,
      ),
    ),
    ThemeData(
      colorScheme: const ColorScheme(
        brightness: Brightness.dark,
        primary: Colors.blue,
        onPrimary: Colors.red,
        secondary: Colors.green,
        onSecondary: Colors.black,
        error: Colors.red,
        onError: Colors.black,
        background: Color.fromRGBO(35, 18, 8, 1),
        onBackground: Colors.white,
        surface: Colors.black,
        onSurface: Colors.black,
      ),
    ),
    ThemeData(
      colorScheme: const ColorScheme(
        brightness: Brightness.dark,
        primary: Colors.blue,
        onPrimary: Colors.red,
        secondary: Colors.green,
        onSecondary: Colors.black,
        error: Colors.red,
        onError: Colors.black,
        background: Color.fromRGBO(4, 31, 21, 1),
        onBackground: Colors.white,
        surface: Colors.black,
        onSurface: Colors.black,
      ),
    ),
    ThemeData(
      colorScheme: const ColorScheme(
        brightness: Brightness.dark,
        primary: Colors.blue,
        onPrimary: Colors.red,
        secondary: Colors.green,
        onSecondary: Colors.black,
        error: Colors.red,
        onError: Colors.black,
        background: Color.fromRGBO(57, 0, 0, 1),
        onBackground: Colors.white,
        surface: Colors.black,
        onSurface: Colors.black,
      ),
    ),
    ThemeData(
      colorScheme: const ColorScheme(
        brightness: Brightness.dark,
        primary: Colors.blue,
        onPrimary: Colors.red,
        secondary: Colors.green,
        onSecondary: Colors.black,
        error: Colors.red,
        onError: Colors.black,
        background: Color.fromRGBO(12, 22, 22, 1),
        onBackground: Colors.white,
        surface: Colors.black,
        onSurface: Colors.black,
      ),
    ),
  ];
}
